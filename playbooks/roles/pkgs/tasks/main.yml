---
- name: Fedora package tasks
  block:
    - name: Enable chrome repo
      yum_repository:
        name: google-chrome
        description: Google Chrome Repository
        baseurl: "http://dl.google.com/linux/chrome/rpm/stable/$basearch"
        gpgcheck: 1
        gpgkey: "https://dl.google.com/linux/linux_signing_key.pub"
        enabled: true

    - name: Enable VSCode repo
      yum_repository:
        name: code
        description: Visual Studio Code
        baseurl: "https://packages.microsoft.com/yumrepos/vscode"
        enabled: true
        gpgcheck: true
        gpgkey: "https://packages.microsoft.com/keys/microsoft.asc"

    - name: Setup RPM Fusion Repos
      dnf:
        name:
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm"

    - name: Enable Kubernetes
      yum_repository:
        name: kubernetes
        file: kubernetes
        description: Kubernetes
        baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
        enabled: true
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey:
          - "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
          - "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"

    - name: update repo
      dnf:
        name: "*"
        state: latest
      register: repo_data

    - debug:
        var: repo_data
      when: repo_data.changed

    - name: install pkgs
      dnf:
        name: "{{ all_pkgs }} + {{ fedora_pkgs }}"
        state: present
      register: installed_packages

    - debug:
        var: installed_packages
      when: installed_packages.changed

  when: ansible_distribution == 'Fedora'

- name: Ubuntu package tasks
  block:
    - name: Install apt keys
      apt_key:
        url: "{{ item }}"
        state: present
      loop: "{{ apt_keys }}"

    - name: Install ppas
      apt_repository:
        repo: "{{ item }}"
        state: present
      loop: "{{ ppas }}"

    - name: Install apt repos
      apt_repository:
        repo: "{{ item.repo }}"
        filename: "{{ item.filename }}"
        state: present
      loop: "{{ apt_repos }}"
      tags:
        - wine

    - name: Update apt repository
      apt:
        update_cache: true
        cache_valid_time: 86400
      tags:
        - nox

    - name: Install apt packages
      apt:
        name: "{{ all_pkgs }} + {{ ubuntu_pkgs }}"
        state: present

    - name: Install remote deb packages
      apt:
        deb: "{{ item }}"
      loop: "{{ remote_debs }}"

    - name: Install wine and recommended packages
      apt:
        name: winehq-staging
        state: present
        install_recommends: true

    - name: Upgrade packages
      apt:
        upgrade: true
      register: installed_packages
      tags:
        - nox

    - debug:
        var: installed_packages
      when: installed_packages.changed

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: true
      tags:
        - nox

  when: ansible_distribution == 'Ubuntu'

- name: Install static archives
  unarchive:
    src: "{{ item }}"
    dest: /usr/local/bin/
    remote_src: true
  loop: "{{ static_archives }}"
  tags:
    - static_archives
    - nox

- name: Install static binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: 0555
  loop: "{{ static_binaries }}"
  tags:
    - static_binaries
    - nox

- name: Install man pages
  get_url:
    url: "{{ item }}"
    dest: /usr/share/man/man1/
    mode: 0444
  loop: "{{ man_pages }}"
  tags:
    - man_pages
    - man
    - nox

- name: Install bash completions
  get_url:
    url: "{{ item }}"
    dest: "/etc/bash_completion.d/{{ item }}"
    mode: 0555
  loop: "{{ bash_completions }}"
  tags:
    - bash_completions
    - nox
