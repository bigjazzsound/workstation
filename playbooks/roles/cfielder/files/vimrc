set nu
set undofile
"set paste
syntax on
set mouse-=a
set guifont=Monaco\ for\ Powerline\ Regular\ 12

" 80 character color difference
let &colorcolumn=join(range(80,999),",")
highlight ColorColumn ctermbg=8
hi ColorColumn ctermbg=Black

" Lines for splitting
set splitbelow
set splitright

" split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" shortcuts with map leader
"let mapleader = ','
nnoremap <leader>/ :nohls <enter>
nnoremap <leader>w :w <enter>
nnoremap <leader>W :%s/\s\+$//e <enter>
nnoremap <leader>q :bd <enter>
nnoremap <leader>n :set nonu <enter>
nnoremap <leader>N :set nu <enter>
nnoremap <leader>l :set list <enter>
nnoremap <leader>L :set nolist <enter>
nnoremap <leader>t :NERDTreeToggle <enter>

" settings for undo files
set undodir=~/.vim/.undo/
set backupdir=~/.vim/.backup/
set directory=~/.vim/.swp/

" settings for search
set hlsearch
set incsearch

" settings for tabs
set expandtab
set autoindent
set smarttab

" settings for listchars
set listchars=tab:..,trail:-,extends:>,precedes:<,nbsp:~

" settings for closing brackets, parenthesis, etc
"au Filetype c inoremap ( ()<Esc>i

" settings for folds
nnoremap <space> za

"
" Plugins
"

call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'arcticicestudio/nord-vim'
" Plug 'valloric/youcompleteme'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-dispatch'
Plug 'christoomey/vim-tmux-navigator'
Plug 'godlygeek/tabular'
Plug 'sheerun/vim-polyglot'
Plug 'w0rp/ale'
Plug 'enricobacis/paste.vim'
Plug 'google/yapf'
Plug 'dracula/vim',{'as':'dracula'}
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'zchee/deoplete-jedi'
Plug 'zchee/deoplete-go', { 'do': 'make'}
Plug 'sealeg/vim-kickstart'
Plug 'junegunn/goyo.vim'
call plug#end()

" Set colorscheme and fixes
set t_Co=256
set background=dark
color dracula
highlight Normal ctermbg=NONE
highlight nonText ctermbg=NONE

" airline settings
set laststatus=2
let g:airline_theme='dracula'
"let g:airline_powerline_fonts = 1

" dispatch settings
nnoremap <F3> :Dispatch<CR>
nnoremap <F4> :Start<CR>

" ale settings
let g:ale_fixers = {
\   'python': ['yapf'],
\   'c': ['clang-format'],
\   'yaml': ['yamllint'],
\   'javascript': ['eslint'],
\}
let g:airline#extensions#ale#enabled = 1
let g:ale_sign_column_always = 1
nmap <F10> <Plug>(ale_fix)

" YouCompleteMe
let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_filetype_blacklist = {}
let g:ycm_global_ycm_extra_conf = '~/.vim/plugged/youcompleteme/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'

" Deoplete
let g:deoplete#enable_at_startup = 1

" vim-markdown
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']

"
" Settings for specific filetypes
"

autocmd BufWritePost /etc/apache2/* !apache2ctl configtest

" settings for C makefiles
autocmd FileType make set noexpandtab shiftwidth=4 softtabstop=0

" settings for editing Salt .sls files with yaml syntax hilighting
autocmd BufNewFile,BufRead *.sls set filetype=yaml tabstop=2 softtabstop=2

" settings for editing yml files
autocmd BufNewFile,BufRead *.yml set filetype=yaml tabstop=2 softtabstop=2 shiftwidth=2 expandtab autoindent

" settings for editing md files
autocmd BufNewFile,BufRead *.md set filetype=markdown textwidth=0

" settings for editing python .py files
"autocmd FileType python let b:dispatch = 'python %'
"autocmd BufNewFile,BufRead *.py
autocmd FileType python silent!
  set filetype=python
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
  set textwidth=79
  set expandtab
  set autoindent
  set fileformat=unix
  set commentstring=#\ %s
  set foldmethod=indent
  nnoremap <LocalLeader>= :0,$!yapf<CR>
  let b:dispatch = 'python %'

" settings for editing .c files
nnoremap <F8> :w <CR> :!gcc -o %< % && ./%< <CR>
au BufEnter *.c compiler gcc
au Filetype c inoremap { {<CR><BS>}<Esc>ko
au Filetype c inoremap ( ()<Esc>i
autocmd BufNewFile,BufRead *.c
        \ set tabstop=4
        \ softtabstop=4
        \ shiftwidth=4
        \ textwidth=79
        \ expandtab
        \ autoindent
        \ fileformat=unix

" settings for editing go files
autocmd FileType go setlocal commentstring=//\ %s

" settings for editing vimrc
autocmd Filetype vim setlocal commentstring=\"\ %s
